// automatically generated by Xtext
grammar org.xtext.mydsl.MyDsl with org.eclipse.xtext.common.Terminals

import "WorldSim1" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Root returns Root:
	'Root'
	'{'
		'character_sheet' character_sheet=CharacterSheet
		'world_concepts' world_concepts=WorldConcepts
		('location_sheet' location_sheet=LocationSheet)?
		'political_entity_sheet' political_entity_sheet=PoliticalEntitySheet
		'belief_system_sheet' belief_system_sheet=BeliefSystemSheet
		'event_sheet' event_sheet=EventSheet
		'presence_sheet' presence_sheet=PresenceSheet
	'}';























CharacterSheet returns CharacterSheet:
	{CharacterSheet}
	'CharacterSheet'
	'{'
		('character' '{' character+=Character ( "," character+=Character)* '}' )?
	'}';

WorldConcepts returns WorldConcepts:
	'WorldConcepts'
	'{'
		'defaultAnimalSpecies' defaultAnimalSpecies=[AnimalSpeciesType|EString]
		('animalspeciestype' '{' animalspeciestype+=AnimalSpeciesType ( "," animalspeciestype+=AnimalSpeciesType)* '}' )?
		('plantspeciestype' '{' plantspeciestype+=PlantSpeciesType ( "," plantspeciestype+=PlantSpeciesType)* '}' )?
		('locationtype' '{' locationtype+=LocationType ( "," locationtype+=LocationType)* '}' )?
		('beliefsystemtype' '{' beliefsystemtype+=BeliefSystemType ( "," beliefsystemtype+=BeliefSystemType)* '}' )?
		('relationshiptype' '{' relationshiptype+=RelationshipType ( "," relationshiptype+=RelationshipType)* '}' )?
	'}';

LocationSheet returns LocationSheet:
	{LocationSheet}
	'LocationSheet'
	'{'
		('location' '{' location+=Location ( "," location+=Location)* '}' )?
	'}';

PoliticalEntitySheet returns PoliticalEntitySheet:
	{PoliticalEntitySheet}
	'PoliticalEntitySheet'
	'{'
		('politicalentity' '{' politicalentity+=PoliticalEntity ( "," politicalentity+=PoliticalEntity)* '}' )?
	'}';

BeliefSystemSheet returns BeliefSystemSheet:
	{BeliefSystemSheet}
	'BeliefSystemSheet'
	'{'
		('beliefsystem' '{' beliefsystem+=BeliefSystem ( "," beliefsystem+=BeliefSystem)* '}' )?
	'}';

EventSheet returns EventSheet:
	{EventSheet}
	'EventSheet'
	'{'
		('event' '{' event+=Event ( "," event+=Event)* '}' )?
	'}';

PresenceSheet returns PresenceSheet:
	{PresenceSheet}
	'PresenceSheet'
	'{'
		('presence' '{' presence+=Presence ( "," presence+=Presence)* '}' )?
	'}';

Character returns Character:
	{Character}
	'Character'
	'{'
		('description' description=EString)?
		('first_name' first_name=EString)?
		('last_name' last_name=EString)?
		('occupation' occupation=EString)?
		('children' '(' children+=[Character|EString] ( "," children+=[Character|EString])* ')' )?
		('believes' '(' believes+=[BeliefSystem|EString] ( "," believes+=[BeliefSystem|EString])* ')' )?
		('supports' supports=[PoliticalEntity|EString])?
		('animalspeciestype' animalspeciestype=[AnimalSpeciesType|EString])?
		('birth' birth=Timestamp)?
		('death' death=Timestamp)?
		('relationship' '{' relationship+=Relationship ( "," relationship+=Relationship)* '}' )?
	'}';

EString returns ecore::EString:
	STRING | ID;

Timestamp returns Timestamp:
	{Timestamp}
	'Timestamp'
	'{'
		('year' year=EIntegerObject)?
		('month' month=EIntegerObject)?
		('day' day=EIntegerObject)?
		('hour' hour=EIntegerObject)?
		('minute' minute=EIntegerObject)?
		('second' second=EIntegerObject)?
	'}';

Relationship returns Relationship:
	'Relationship'
	'{'
		('description' description=EString)?
		'character' character=[Character|EString]
		'relationshiptype' relationshiptype=[RelationshipType|EString]
	'}';

BeliefSystem returns BeliefSystem:
	'BeliefSystem'
	name=EString
	'{'
		('description' description=EString)?
		'beliefsystemtype' beliefsystemtype=[BeliefSystemType|EString]
		('is_believed_by' '(' is_believed_by+=[Character|EString] ( "," is_believed_by+=[Character|EString])* ')' )?
		('related_events' '(' related_events+=[Event|EString] ( "," related_events+=[Event|EString])* ')' )?
	'}';

PoliticalEntity returns PoliticalEntity:
	'PoliticalEntity'
	name=EString
	'{'
		('description' description=EString)?
		('beliefsystem' '(' beliefsystem+=[BeliefSystem|EString] ( "," beliefsystem+=[BeliefSystem|EString])* ')' )?
		('members' '(' members+=[Character|EString] ( "," members+=[Character|EString])* ')' )?
		'is_concerned_with' '(' is_concerned_with+=[Location|EString] ( "," is_concerned_with+=[Location|EString])* ')' 
	'}';

AnimalSpeciesType returns AnimalSpeciesType:
	{AnimalSpeciesType}
	'AnimalSpeciesType'
	name=EString
	'{'
		('description' description=EString)?
		('natural_habitat' '(' natural_habitat+=[Location|EString] ( "," natural_habitat+=[Location|EString])* ')' )?
	'}';

EIntegerObject returns ecore::EIntegerObject:
	'-'? INT;

RelationshipType returns RelationshipType:
	{RelationshipType}
	'RelationshipType'
	name=EString
	'{'
		('description' description=EString)?
	'}';

BeliefSystemType returns BeliefSystemType:
	canHaveEvent?='canHaveEvent'
	'BeliefSystemType'
	name=EString
	'{'
		('description' description=EString)?
	'}';

Event returns Event:
	{Event}
	'Event'
	name=EString
	'{'
		('description' description=EString)?
		('location' '(' location+=[Location|EString] ( "," location+=[Location|EString])* ')' )?
		('presences' '(' presences+=[Presence|EString] ( "," presences+=[Presence|EString])* ')' )?
		('related_beliefs' '(' related_beliefs+=[BeliefSystem|EString] ( "," related_beliefs+=[BeliefSystem|EString])* ')' )?
	'}';

EBooleanObject returns ecore::EBooleanObject:
	'true' | 'false';

Location returns Location:
	'Location'
	name=EString
	'{'
		('description' description=EString)?
		('flag' flag=ImageURL)?
		'locationtype' locationtype=[LocationType|EString]
		('plants_that_occur' '(' plants_that_occur+=[PlantSpeciesType|EString] ( "," plants_that_occur+=[PlantSpeciesType|EString])* ')' )?
		('animals_that_occur' '(' animals_that_occur+=[AnimalSpeciesType|EString] ( "," animals_that_occur+=[AnimalSpeciesType|EString])* ')' )?
		('events' '(' events+=[Event|EString] ( "," events+=[Event|EString])* ')' )?
		'coordinates' '{' coordinates+=Coordinate ( "," coordinates+=Coordinate)* '}' 
	'}';

Presence returns Presence:
	'Presence'
	'{'
		'location' location=[Location|EString]
		'character' character=[Character|EString]
		('event' '(' event+=[Event|EString] ( "," event+=[Event|EString])* ')' )?
		'timeframe' timeframe=Timeframe
	'}';

ImageURL returns ImageURL:
	'ImageURL' /* TODO: implement this rule and an appropriate IValueConverter */;

LocationType returns LocationType:
	{LocationType}
	'LocationType'
	name=EString
	'{'
		('description' description=EString)?
		('contains' '(' contains+=[LocationType|EString] ( "," contains+=[LocationType|EString])* ')' )?
	'}';

PlantSpeciesType returns PlantSpeciesType:
	{PlantSpeciesType}
	'PlantSpeciesType'
	name=EString
	'{'
		('description' description=EString)?
		('natural_habitat' '(' natural_habitat+=[Location|EString] ( "," natural_habitat+=[Location|EString])* ')' )?
	'}';

Coordinate returns Coordinate:
	'Coordinate'
	'{'
		'latitude' latitude=EDoubleObject
		'longitude' longitude=EDoubleObject
	'}';

EDoubleObject returns ecore::EDoubleObject:
	'-'? INT? '.' INT (('E'|'e') '-'? INT)?;

Timeframe returns Timeframe:
	'Timeframe'
	'{'
		'start' start=Timestamp
		'end' end=Timestamp
	'}';
